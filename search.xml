<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>关于博客搭建的那些事</title>
    <url>/blog/2020/08/04/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>  啦啦啦，折腾了快两个月，博客终于搞定了=。=<br>  这期间由于学习方面的事情，建博客的工作停滞了很长一段时间。现在终于期末考完了，有时间折腾了。<br>  当然，在这里要感谢<a href="https://blog.soulxyz.top/" target="_blank" rel="noopener">开哥</a>,不厌其烦的为我提供技术指导。<br>  还要感谢<a href="https://demo.jerryc.me/" target="_blank" rel="noopener">jerry</a>,提供了非常棒的<code>butterfly</code>主题。<br>  在白手起家建博客的过程中，踩了无数的坑。我想我要把完整的过程记下来，方便日后的整理和学习。也对像我一样的<code>git</code>小白提供帮助。<br>  <code>先来首歌放松一下吧</code><br>  
        <div id="aplayer-JIJdVfIq" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">
            <pre class="aplayer-lrc-content"></pre>
        </div>
        <script>
          var ap = new APlayer({
            element: document.getElementById("aplayer-JIJdVfIq"),
            narrow: false,
            autoplay: false,
            showlrc: false,
            music: {
              title: "alone",
              author: "alan walker",
              url: "http://image0012.test.upcdn.net/8iybafhbwt6ajuizacdb9kcsysq857.mp3",
              pic: "http://image0012.test.upcdn.net/%E6%89%B9%E6%B3%A8%202020-08-05%20153648.png",
              lrc: ""
            }
          });
          window.aplayers || (window.aplayers = []);
          window.aplayers.push(ap);
        </script></p>
<h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><p>  需要安装：<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">node.js</a>,<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git工具</a>.两种工具都是傻瓜式的安装，一路选择默认就可以了。<br>            还有读写<code>.yml</code>文件的工具，这里推荐<a href="https://www.microsoft.com/zh-cn/p/serris-code-editor/9nblggh4rm22?activetab=pivot:overviewtab" target="_blank" rel="noopener">官方的软件</a></p>
<div class="note primary no-icon">
            <p>安装完成后，在电脑桌面上点击右键，可以看到对话框中多了<code>git GUI here</code>和<code>git bash here</code>,说明安装成功。</p>
          </div>

<div class="note danger">
            <p>安装node.js时要注意版本信息，有时版本过高git命令会报错，这是就要安装旧一点的node.js</p>
          </div>

<h1 id="hexo的安装及初始化博客"><a href="#hexo的安装及初始化博客" class="headerlink" title="hexo的安装及初始化博客"></a>hexo的安装及初始化博客</h1><p> 由于<code>hexo</code>的镜像文件在国外，经常会被墙，导致初始化失败，所以这时候就要先安装淘宝的镜像文件来代替。在电脑桌面上右键打开git bash，执行：<br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><br> 等待安装完成。然后继续执行：<br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install -g hexo</span><br></pre></td></tr></table></figure></p>
<p> 安装完成后，继续执行：<br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><br> 这一个步骤对网络要求比较高，如果网络不顺畅，很容易出现各种报错(warning),多试几次就好了。等到命令执行完后，再执行:<br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><br> 至此，hexo就算安装完了。回到电脑桌面，可以看到多出来一个名为<code>blog</code>的文件夹。这就是hexo工作的文件夹。</p>
 <div class="note primary no-icon">
            <p>如果你这时候已经迫不及待的想看看自己的博客了，可以在blog目录下执行命令<code>hexo s</code>,然后再浏览器中输入网址<code>http://localhost:4000</code>,就可以在本地预览博客了。</p>
          </div>

<h1 id="推送到gitee（因为github经常被墙，巨慢无比）"><a href="#推送到gitee（因为github经常被墙，巨慢无比）" class="headerlink" title="推送到gitee（因为github经常被墙，巨慢无比）"></a>推送到gitee（因为github经常被墙，巨慢无比）</h1><p> 首先你要有个<a href="https://gitee.com/" target="_blank" rel="noopener">gitee</a>的账号，在上面创建一个新的仓库，名字随便取。</p>
 <img src="/blog/2020/08/04/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/a.png" class title="实例图片">

<p> 然后进入到<code>blog</code>目录里先后执行：<br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo --save</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><br> 从命令的反馈里可以看到，hexo生成了很多<code>css</code>,<code>js</code>的静态文件。然后继续执行命令：<br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-devepoler-git --save</span><br></pre></td></tr></table></figure></p>
<p> 这里安装了一个hexo的插件，用于自动部署。</p>
<p> 随后进入到blog目录里打开_config.yml文件，在最下面添加以下代码：</p>
 <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> </span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>
<p>然后，回到gitee上你刚刚新建的仓库里，复制它给你的<code>ssh</code>地址到上述代码的<code>repository</code>中：</p>
<img src="/blog/2020/08/04/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/b.png" class title="实例图片">

<div class="note danger">
            <p>注意：在配置所有的_config.yml文件时，所有的冒号后面都要加一个空格，否则hexo命令会报错</p>
          </div>

<h2 id="生成密匙"><a href="#生成密匙" class="headerlink" title="生成密匙"></a>生成密匙</h2><h3 id="和gitee的通讯方式"><a href="#和gitee的通讯方式" class="headerlink" title="和gitee的通讯方式"></a>和gitee的通讯方式</h3><p>首先，在桌面上右键打开<code>git bash</code>工具，执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config –global user.name <span class="string">'xxxxx'</span></span><br><span class="line">git config –global user.email <span class="string">'xxx@xx.xxx'</span></span><br></pre></td></tr></table></figure>

<p>其中，<code>name</code>就是你的gitee的用户名，<code>email</code>就是你用来创建gitee的邮箱，这一步等于告诉了git你的身份。</p>
<div class="note primary no-icon">
            <p>配置完用户信息后，如果git命令没有任何回馈，则代表配置成功。</p>
          </div>

<p>配置完后，接着输入命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"你在上一步输入的邮箱"</span></span><br></pre></td></tr></table></figure>
<p>然后一路回车，出现类似一下回馈，代表创建<code>ssh</code>密匙完成：</p>
<img src="/blog/2020/08/04/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/c.png" class title="实例图片">

<p>创建完成后，再执行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>git的回馈就是你的密匙，把他全部copy下来，粘贴到gitee上</p>
<img src="/blog/2020/08/04/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/d.png" class title="实例图片">
<p>在<code>gitee主页--头像--设置--ssh密匙</code>里添加密匙</p>
<p>之后回到本地，在blog目录里执行<code>hexo d</code>,博客就推送到线上了，去<code>仓库--服务--gitee pages</code>开通gitee.pages服务，博客就算建完了。</p>
<img src="/blog/2020/08/04/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/e.png" class title="实例图片">

<p>完成之后，打开自己的网页，会发现<code>css</code>,<code>js</code>文件没有加载，这时候你又要回到本地的_<code>cnfig.yml</code>文件中，找到以下代码片段：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> </span><br><span class="line"><span class="attr">root:</span></span><br></pre></td></tr></table></figure>
<p>按照他的要求填写，例如，我的就是：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://ran_brother.gitee.io/blog</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/blog</span></span><br></pre></td></tr></table></figure>
<p>完成之后再执行<code>hexo clean</code>,<code>hexo g</code>,hexo d<code>,去更新gitee pages服务，</code>css<code>,</code>js`文件就可以正常显示了。</p>
<h1 id="发表新的文章"><a href="#发表新的文章" class="headerlink" title="发表新的文章"></a>发表新的文章</h1><p> 在blog目录中，执行：<br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new 文章题目</span><br></pre></td></tr></table></figure><br> 就会发现在blog/source/posts文件夹里多了一个与你新的文章名字相同的.md文件。用编辑器编辑里面的内容，注意要用<code>markdown</code>语法。<br> 如果对markdown语法不熟练，<a href="http://www.mdeditor.com/" target="_blank" rel="noopener">请戳我</a>.完成之后保存。回到blog目录中，先后执行：<br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><br> 再去gitee更新一下pages服务，就可以看到自己的文章了。</p>
<p> 以上只是hexo的基础部分，很多地方不完善，日后我会把其他完善的过程继续记录下。</p>
]]></content>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>第一天启动博客</title>
    <url>/blog/2020/08/01/%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%90%AF%E5%8A%A8%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script> <img src="/blog/2020/08/01/%E7%AC%AC%E4%B8%80%E5%A4%A9%E5%90%AF%E5%8A%A8%E5%8D%9A%E5%AE%A2/example.jpg" class title="This is an example image">
<p>测试用文章</p>
]]></content>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
</search>
